
policebox:     file format elf32-i386


Disassembly of section .interp:

08048154 <.interp>:
 8048154:	2f                   	das    
 8048155:	6c                   	ins    BYTE PTR es:[edi],dx
 8048156:	69 62 2f 6c 64 2d 6c 	imul   esp,DWORD PTR [edx+0x2f],0x6c2d646c
 804815d:	69 6e 75 78 2e 73 6f 	imul   ebp,DWORD PTR [esi+0x75],0x6f732e78
 8048164:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .note.ABI-tag:

08048168 <.note.ABI-tag>:
 8048168:	04 00                	add    al,0x0
 804816a:	00 00                	add    BYTE PTR [eax],al
 804816c:	10 00                	adc    BYTE PTR [eax],al
 804816e:	00 00                	add    BYTE PTR [eax],al
 8048170:	01 00                	add    DWORD PTR [eax],eax
 8048172:	00 00                	add    BYTE PTR [eax],al
 8048174:	47                   	inc    edi
 8048175:	4e                   	dec    esi
 8048176:	55                   	push   ebp
 8048177:	00 00                	add    BYTE PTR [eax],al
 8048179:	00 00                	add    BYTE PTR [eax],al
 804817b:	00 02                	add    BYTE PTR [edx],al
 804817d:	00 00                	add    BYTE PTR [eax],al
 804817f:	00 06                	add    BYTE PTR [esi],al
 8048181:	00 00                	add    BYTE PTR [eax],al
 8048183:	00 18                	add    BYTE PTR [eax],bl
 8048185:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .note.gnu.build-id:

08048188 <.note.gnu.build-id>:
 8048188:	04 00                	add    al,0x0
 804818a:	00 00                	add    BYTE PTR [eax],al
 804818c:	14 00                	adc    al,0x0
 804818e:	00 00                	add    BYTE PTR [eax],al
 8048190:	03 00                	add    eax,DWORD PTR [eax]
 8048192:	00 00                	add    BYTE PTR [eax],al
 8048194:	47                   	inc    edi
 8048195:	4e                   	dec    esi
 8048196:	55                   	push   ebp
 8048197:	00 be 93 dc cb d7    	add    BYTE PTR [esi-0x2834236d],bh
 804819d:	6c                   	ins    BYTE PTR es:[edi],dx
 804819e:	2c 45                	sub    al,0x45
 80481a0:	5a                   	pop    edx
 80481a1:	60                   	pusha  
 80481a2:	a3 56 01 03 e6       	mov    ds:0xe6030156,eax
 80481a7:	12                   	.byte 0x12
 80481a8:	05                   	.byte 0x5
 80481a9:	b9                   	.byte 0xb9
 80481aa:	55                   	push   ebp
 80481ab:	7b                   	.byte 0x7b

Disassembly of section .gnu.hash:

080481ac <.gnu.hash>:
 80481ac:	02 00                	add    al,BYTE PTR [eax]
 80481ae:	00 00                	add    BYTE PTR [eax],al
 80481b0:	0c 00                	or     al,0x0
 80481b2:	00 00                	add    BYTE PTR [eax],al
 80481b4:	01 00                	add    DWORD PTR [eax],eax
 80481b6:	00 00                	add    BYTE PTR [eax],al
 80481b8:	05 00 00 00 00       	add    eax,0x0
 80481bd:	20 00                	and    BYTE PTR [eax],al
 80481bf:	20 00                	and    BYTE PTR [eax],al
 80481c1:	00 00                	add    BYTE PTR [eax],al
 80481c3:	00 0c 00             	add    BYTE PTR [eax+eax*1],cl
 80481c6:	00 00                	add    BYTE PTR [eax],al
 80481c8:	ad                   	lods   eax,DWORD PTR ds:[esi]
 80481c9:	4b                   	dec    ebx
 80481ca:	e3 c0                	jecxz  804818c <_init-0x27c>

Disassembly of section .dynsym:

080481cc <.dynsym>:
	...
 80481dc:	46                   	inc    esi
	...
 80481e5:	00 00                	add    BYTE PTR [eax],al
 80481e7:	00 12                	add    BYTE PTR [edx],dl
 80481e9:	00 00                	add    BYTE PTR [eax],al
 80481eb:	00 54 00 00          	add    BYTE PTR [eax+eax*1+0x0],dl
	...
 80481f7:	00 12                	add    BYTE PTR [edx],dl
 80481f9:	00 00                	add    BYTE PTR [eax],al
 80481fb:	00 35 00 00 00 00    	add    BYTE PTR ds:0x0,dh
 8048201:	00 00                	add    BYTE PTR [eax],al
 8048203:	00 00                	add    BYTE PTR [eax],al
 8048205:	00 00                	add    BYTE PTR [eax],al
 8048207:	00 12                	add    BYTE PTR [edx],dl
 8048209:	00 00                	add    BYTE PTR [eax],al
 804820b:	00 29                	add    BYTE PTR [ecx],ch
	...
 8048215:	00 00                	add    BYTE PTR [eax],al
 8048217:	00 12                	add    BYTE PTR [edx],dl
 8048219:	00 00                	add    BYTE PTR [eax],al
 804821b:	00 5c 00 00          	add    BYTE PTR [eax+eax*1+0x0],bl
	...
 8048227:	00 12                	add    BYTE PTR [edx],dl
 8048229:	00 00                	add    BYTE PTR [eax],al
 804822b:	00 82 00 00 00 00    	add    BYTE PTR [edx+0x0],al
 8048231:	00 00                	add    BYTE PTR [eax],al
 8048233:	00 00                	add    BYTE PTR [eax],al
 8048235:	00 00                	add    BYTE PTR [eax],al
 8048237:	00 12                	add    BYTE PTR [edx],dl
 8048239:	00 00                	add    BYTE PTR [eax],al
 804823b:	00 30                	add    BYTE PTR [eax],dh
	...
 8048245:	00 00                	add    BYTE PTR [eax],al
 8048247:	00 12                	add    BYTE PTR [edx],dl
 8048249:	00 00                	add    BYTE PTR [eax],al
 804824b:	00 01                	add    BYTE PTR [ecx],al
	...
 8048255:	00 00                	add    BYTE PTR [eax],al
 8048257:	00 20                	add    BYTE PTR [eax],ah
 8048259:	00 00                	add    BYTE PTR [eax],al
 804825b:	00 70 00             	add    BYTE PTR [eax+0x0],dh
	...
 8048266:	00 00                	add    BYTE PTR [eax],al
 8048268:	12 00                	adc    al,BYTE PTR [eax]
 804826a:	00 00                	add    BYTE PTR [eax],al
 804826c:	4d                   	dec    ebp
	...
 8048275:	00 00                	add    BYTE PTR [eax],al
 8048277:	00 12                	add    BYTE PTR [edx],dl
 8048279:	00 00                	add    BYTE PTR [eax],al
 804827b:	00 66 00             	add    BYTE PTR [esi+0x0],ah
	...
 8048286:	00 00                	add    BYTE PTR [eax],al
 8048288:	12 00                	adc    al,BYTE PTR [eax]
 804828a:	00 00                	add    BYTE PTR [eax],al
 804828c:	1a 00                	sbb    al,BYTE PTR [eax]
 804828e:	00 00                	add    BYTE PTR [eax],al
 8048290:	88 88 04 08 04 00    	mov    BYTE PTR [eax+0x40804],cl
 8048296:	00 00                	add    BYTE PTR [eax],al
 8048298:	11 00                	adc    DWORD PTR [eax],eax
 804829a:	0f                   	.byte 0xf
	...

Disassembly of section .dynstr:

0804829c <.dynstr>:
 804829c:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 804829f:	67 6d                	ins    DWORD PTR es:[di],dx
 80482a1:	6f                   	outs   dx,DWORD PTR ds:[esi]
 80482a2:	6e                   	outs   dx,BYTE PTR ds:[esi]
 80482a3:	5f                   	pop    edi
 80482a4:	73 74                	jae    804831a <_init-0xee>
 80482a6:	61                   	popa   
 80482a7:	72 74                	jb     804831d <_init-0xeb>
 80482a9:	5f                   	pop    edi
 80482aa:	5f                   	pop    edi
 80482ab:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 80482af:	63 2e                	arpl   WORD PTR [esi],bp
 80482b1:	73 6f                	jae    8048322 <_init-0xe6>
 80482b3:	2e 36 00 5f 49       	cs add BYTE PTR cs:ss:[edi+0x49],bl
 80482b8:	4f                   	dec    edi
 80482b9:	5f                   	pop    edi
 80482ba:	73 74                	jae    8048330 <_init-0xd8>
 80482bc:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
 80482c3:	64 
 80482c4:	00 70 65             	add    BYTE PTR [eax+0x65],dh
 80482c7:	72 72                	jb     804833b <_init-0xcd>
 80482c9:	6f                   	outs   dx,DWORD PTR ds:[esi]
 80482ca:	72 00                	jb     80482cc <_init-0x13c>
 80482cc:	70 75                	jo     8048343 <_init-0xc5>
 80482ce:	74 73                	je     8048343 <_init-0xc5>
 80482d0:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 80482d3:	73 74                	jae    8048349 <_init-0xbf>
 80482d5:	61                   	popa   
 80482d6:	63 6b 5f             	arpl   WORD PTR [ebx+0x5f],bp
 80482d9:	63 68 6b             	arpl   WORD PTR [eax+0x6b],bp
 80482dc:	5f                   	pop    edi
 80482dd:	66 61                	popaw  
 80482df:	69 6c 00 70 72 69 6e 	imul   ebp,DWORD PTR [eax+eax*1+0x70],0x746e6972
 80482e6:	74 
 80482e7:	66                   	data16
 80482e8:	00 69 73             	add    BYTE PTR [ecx+0x73],ch
 80482eb:	61                   	popa   
 80482ec:	74 74                	je     8048362 <_init-0xa6>
 80482ee:	79 00                	jns    80482f0 <_init-0x118>
 80482f0:	67                   	addr16
 80482f1:	65                   	gs
 80482f2:	74 63                	je     8048357 <_init-0xb1>
 80482f4:	68 61 72 00 74       	push   0x74007261
 80482f9:	63 73 65             	arpl   WORD PTR [ebx+0x65],si
 80482fc:	74 61                	je     804835f <_init-0xa9>
 80482fe:	74 74                	je     8048374 <_init-0x94>
 8048300:	72 00                	jb     8048302 <_init-0x106>
 8048302:	74 63                	je     8048367 <_init-0xa1>
 8048304:	67                   	addr16
 8048305:	65                   	gs
 8048306:	74 61                	je     8048369 <_init-0x9f>
 8048308:	74 74                	je     804837e <_init-0x8a>
 804830a:	72 00                	jb     804830c <_init-0xfc>
 804830c:	5f                   	pop    edi
 804830d:	5f                   	pop    edi
 804830e:	6c                   	ins    BYTE PTR es:[edi],dx
 804830f:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [edx+0x63],0x6174735f
 8048316:	72 74                	jb     804838c <_init-0x7c>
 8048318:	5f                   	pop    edi
 8048319:	6d                   	ins    DWORD PTR es:[edi],dx
 804831a:	61                   	popa   
 804831b:	69 6e 00 5f 5f 63 78 	imul   ebp,DWORD PTR [esi+0x0],0x78635f5f
 8048322:	61                   	popa   
 8048323:	5f                   	pop    edi
 8048324:	61                   	popa   
 8048325:	74 65                	je     804838c <_init-0x7c>
 8048327:	78 69                	js     8048392 <_init-0x76>
 8048329:	74 00                	je     804832b <_init-0xdd>
 804832b:	47                   	inc    edi
 804832c:	4c                   	dec    esp
 804832d:	49                   	dec    ecx
 804832e:	42                   	inc    edx
 804832f:	43                   	inc    ebx
 8048330:	5f                   	pop    edi
 8048331:	32 2e                	xor    ch,BYTE PTR [esi]
 8048333:	31 2e                	xor    DWORD PTR [esi],ebp
 8048335:	33 00                	xor    eax,DWORD PTR [eax]
 8048337:	47                   	inc    edi
 8048338:	4c                   	dec    esp
 8048339:	49                   	dec    ecx
 804833a:	42                   	inc    edx
 804833b:	43                   	inc    ebx
 804833c:	5f                   	pop    edi
 804833d:	32 2e                	xor    ch,BYTE PTR [esi]
 804833f:	34 00                	xor    al,0x0
 8048341:	47                   	inc    edi
 8048342:	4c                   	dec    esp
 8048343:	49                   	dec    ecx
 8048344:	42                   	inc    edx
 8048345:	43                   	inc    ebx
 8048346:	5f                   	pop    edi
 8048347:	32 2e                	xor    ch,BYTE PTR [esi]
 8048349:	30 00                	xor    BYTE PTR [eax],al

Disassembly of section .gnu.version:

0804834c <.gnu.version>:
 804834c:	00 00                	add    BYTE PTR [eax],al
 804834e:	02 00                	add    al,BYTE PTR [eax]
 8048350:	02 00                	add    al,BYTE PTR [eax]
 8048352:	03 00                	add    eax,DWORD PTR [eax]
 8048354:	02 00                	add    al,BYTE PTR [eax]
 8048356:	02 00                	add    al,BYTE PTR [eax]
 8048358:	04 00                	add    al,0x0
 804835a:	02 00                	add    al,BYTE PTR [eax]
 804835c:	00 00                	add    BYTE PTR [eax],al
 804835e:	02 00                	add    al,BYTE PTR [eax]
 8048360:	02 00                	add    al,BYTE PTR [eax]
 8048362:	02 00                	add    al,BYTE PTR [eax]
 8048364:	01 00                	add    DWORD PTR [eax],eax

Disassembly of section .gnu.version_r:

08048368 <.gnu.version_r>:
 8048368:	01 00                	add    DWORD PTR [eax],eax
 804836a:	03 00                	add    eax,DWORD PTR [eax]
 804836c:	10 00                	adc    BYTE PTR [eax],al
 804836e:	00 00                	add    BYTE PTR [eax],al
 8048370:	10 00                	adc    BYTE PTR [eax],al
 8048372:	00 00                	add    BYTE PTR [eax],al
 8048374:	00 00                	add    BYTE PTR [eax],al
 8048376:	00 00                	add    BYTE PTR [eax],al
 8048378:	73 1f                	jae    8048399 <_init-0x6f>
 804837a:	69 09 00 00 04 00    	imul   ecx,DWORD PTR [ecx],0x40000
 8048380:	8f 00                	pop    DWORD PTR [eax]
 8048382:	00 00                	add    BYTE PTR [eax],al
 8048384:	10 00                	adc    BYTE PTR [eax],al
 8048386:	00 00                	add    BYTE PTR [eax],al
 8048388:	14 69                	adc    al,0x69
 804838a:	69 0d 00 00 03 00 9b 	imul   ecx,DWORD PTR ds:0x30000,0x9b
 8048391:	00 00 00 
 8048394:	10 00                	adc    BYTE PTR [eax],al
 8048396:	00 00                	add    BYTE PTR [eax],al
 8048398:	10 69 69             	adc    BYTE PTR [ecx+0x69],ch
 804839b:	0d 00 00 02 00       	or     eax,0x20000
 80483a0:	a5                   	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
 80483a1:	00 00                	add    BYTE PTR [eax],al
 80483a3:	00 00                	add    BYTE PTR [eax],al
 80483a5:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

080483a8 <.rel.dyn>:
 80483a8:	f8                   	clc    
 80483a9:	9f                   	lahf   
 80483aa:	04 08                	add    al,0x8
 80483ac:	06                   	push   es
 80483ad:	08 00                	or     BYTE PTR [eax],al
	...

Disassembly of section .rel.plt:

080483b0 <.rel.plt>:
 80483b0:	0c a0                	or     al,0xa0
 80483b2:	04 08                	add    al,0x8
 80483b4:	07                   	pop    es
 80483b5:	01 00                	add    DWORD PTR [eax],eax
 80483b7:	00 10                	add    BYTE PTR [eax],dl
 80483b9:	a0 04 08 07 02       	mov    al,ds:0x2070804
 80483be:	00 00                	add    BYTE PTR [eax],al
 80483c0:	14 a0                	adc    al,0xa0
 80483c2:	04 08                	add    al,0x8
 80483c4:	07                   	pop    es
 80483c5:	03 00                	add    eax,DWORD PTR [eax]
 80483c7:	00 18                	add    BYTE PTR [eax],bl
 80483c9:	a0 04 08 07 04       	mov    al,ds:0x4070804
 80483ce:	00 00                	add    BYTE PTR [eax],al
 80483d0:	1c a0                	sbb    al,0xa0
 80483d2:	04 08                	add    al,0x8
 80483d4:	07                   	pop    es
 80483d5:	05 00 00 20 a0       	add    eax,0xa0200000
 80483da:	04 08                	add    al,0x8
 80483dc:	07                   	pop    es
 80483dd:	06                   	push   es
 80483de:	00 00                	add    BYTE PTR [eax],al
 80483e0:	24 a0                	and    al,0xa0
 80483e2:	04 08                	add    al,0x8
 80483e4:	07                   	pop    es
 80483e5:	07                   	pop    es
 80483e6:	00 00                	add    BYTE PTR [eax],al
 80483e8:	28 a0 04 08 07 08    	sub    BYTE PTR [eax+0x8070804],ah
 80483ee:	00 00                	add    BYTE PTR [eax],al
 80483f0:	2c a0                	sub    al,0xa0
 80483f2:	04 08                	add    al,0x8
 80483f4:	07                   	pop    es
 80483f5:	09 00                	or     DWORD PTR [eax],eax
 80483f7:	00 30                	add    BYTE PTR [eax],dh
 80483f9:	a0 04 08 07 0a       	mov    al,ds:0xa070804
 80483fe:	00 00                	add    BYTE PTR [eax],al
 8048400:	34 a0                	xor    al,0xa0
 8048402:	04 08                	add    al,0x8
 8048404:	07                   	pop    es
 8048405:	0b 00                	or     eax,DWORD PTR [eax]
	...

Disassembly of section .init:

08048408 <_init>:
 8048408:	53                   	push   ebx
 8048409:	83 ec 08             	sub    esp,0x8
 804840c:	e8 00 00 00 00       	call   8048411 <_init+0x9>
 8048411:	5b                   	pop    ebx
 8048412:	81 c3 ef 1b 00 00    	add    ebx,0x1bef
 8048418:	8b 83 f8 ff ff ff    	mov    eax,DWORD PTR [ebx-0x8]
 804841e:	85 c0                	test   eax,eax
 8048420:	74 05                	je     8048427 <_init+0x1f>
 8048422:	e8 89 00 00 00       	call   80484b0 <__gmon_start__@plt>
 8048427:	83 c4 08             	add    esp,0x8
 804842a:	5b                   	pop    ebx
 804842b:	c3                   	ret    

Disassembly of section .plt:

08048430 <printf@plt-0x10>:
 8048430:	ff 35 04 a0 04 08    	push   DWORD PTR ds:0x804a004
 8048436:	ff 25 08 a0 04 08    	jmp    DWORD PTR ds:0x804a008
 804843c:	00 00                	add    BYTE PTR [eax],al
	...

08048440 <printf@plt>:
 8048440:	ff 25 0c a0 04 08    	jmp    DWORD PTR ds:0x804a00c
 8048446:	68 00 00 00 00       	push   0x0
 804844b:	e9 e0 ff ff ff       	jmp    8048430 <_init+0x28>

08048450 <getchar@plt>:
 8048450:	ff 25 10 a0 04 08    	jmp    DWORD PTR ds:0x804a010
 8048456:	68 08 00 00 00       	push   0x8
 804845b:	e9 d0 ff ff ff       	jmp    8048430 <_init+0x28>

08048460 <__stack_chk_fail@plt>:
 8048460:	ff 25 14 a0 04 08    	jmp    DWORD PTR ds:0x804a014
 8048466:	68 10 00 00 00       	push   0x10
 804846b:	e9 c0 ff ff ff       	jmp    8048430 <_init+0x28>

08048470 <perror@plt>:
 8048470:	ff 25 18 a0 04 08    	jmp    DWORD PTR ds:0x804a018
 8048476:	68 18 00 00 00       	push   0x18
 804847b:	e9 b0 ff ff ff       	jmp    8048430 <_init+0x28>

08048480 <tcsetattr@plt>:
 8048480:	ff 25 1c a0 04 08    	jmp    DWORD PTR ds:0x804a01c
 8048486:	68 20 00 00 00       	push   0x20
 804848b:	e9 a0 ff ff ff       	jmp    8048430 <_init+0x28>

08048490 <__cxa_atexit@plt>:
 8048490:	ff 25 20 a0 04 08    	jmp    DWORD PTR ds:0x804a020
 8048496:	68 28 00 00 00       	push   0x28
 804849b:	e9 90 ff ff ff       	jmp    8048430 <_init+0x28>

080484a0 <puts@plt>:
 80484a0:	ff 25 24 a0 04 08    	jmp    DWORD PTR ds:0x804a024
 80484a6:	68 30 00 00 00       	push   0x30
 80484ab:	e9 80 ff ff ff       	jmp    8048430 <_init+0x28>

080484b0 <__gmon_start__@plt>:
 80484b0:	ff 25 28 a0 04 08    	jmp    DWORD PTR ds:0x804a028
 80484b6:	68 38 00 00 00       	push   0x38
 80484bb:	e9 70 ff ff ff       	jmp    8048430 <_init+0x28>

080484c0 <__libc_start_main@plt>:
 80484c0:	ff 25 2c a0 04 08    	jmp    DWORD PTR ds:0x804a02c
 80484c6:	68 40 00 00 00       	push   0x40
 80484cb:	e9 60 ff ff ff       	jmp    8048430 <_init+0x28>

080484d0 <isatty@plt>:
 80484d0:	ff 25 30 a0 04 08    	jmp    DWORD PTR ds:0x804a030
 80484d6:	68 48 00 00 00       	push   0x48
 80484db:	e9 50 ff ff ff       	jmp    8048430 <_init+0x28>

080484e0 <tcgetattr@plt>:
 80484e0:	ff 25 34 a0 04 08    	jmp    DWORD PTR ds:0x804a034
 80484e6:	68 50 00 00 00       	push   0x50
 80484eb:	e9 40 ff ff ff       	jmp    8048430 <_init+0x28>

Disassembly of section .text:

080484f0 <_start>:
 80484f0:	31 ed                	xor    ebp,ebp
 80484f2:	5e                   	pop    esi
 80484f3:	89 e1                	mov    ecx,esp
 80484f5:	83 e4 f0             	and    esp,0xfffffff0
 80484f8:	50                   	push   eax
 80484f9:	54                   	push   esp
 80484fa:	52                   	push   edx
 80484fb:	68 20 88 04 08       	push   0x8048820
 8048500:	68 b0 87 04 08       	push   0x80487b0
 8048505:	51                   	push   ecx
 8048506:	56                   	push   esi
 8048507:	68 1e 86 04 08       	push   0x804861e
 804850c:	e8 af ff ff ff       	call   80484c0 <__libc_start_main@plt>
 8048511:	f4                   	hlt    
 8048512:	66 90                	xchg   ax,ax
 8048514:	66 90                	xchg   ax,ax
 8048516:	66 90                	xchg   ax,ax
 8048518:	66 90                	xchg   ax,ax
 804851a:	66 90                	xchg   ax,ax
 804851c:	66 90                	xchg   ax,ax
 804851e:	66 90                	xchg   ax,ax

08048520 <deregister_tm_clones>:
 8048520:	b8 43 a0 04 08       	mov    eax,0x804a043
 8048525:	2d 40 a0 04 08       	sub    eax,0x804a040
 804852a:	83 f8 06             	cmp    eax,0x6
 804852d:	77 02                	ja     8048531 <deregister_tm_clones+0x11>
 804852f:	f3 c3                	repz ret 
 8048531:	b8 00 00 00 00       	mov    eax,0x0
 8048536:	85 c0                	test   eax,eax
 8048538:	74 f5                	je     804852f <deregister_tm_clones+0xf>
 804853a:	55                   	push   ebp
 804853b:	89 e5                	mov    ebp,esp
 804853d:	83 ec 18             	sub    esp,0x18
 8048540:	c7 04 24 40 a0 04 08 	mov    DWORD PTR [esp],0x804a040
 8048547:	ff d0                	call   eax
 8048549:	c9                   	leave  
 804854a:	c3                   	ret    
 804854b:	90                   	nop
 804854c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

08048550 <register_tm_clones>:
 8048550:	b8 40 a0 04 08       	mov    eax,0x804a040
 8048555:	2d 40 a0 04 08       	sub    eax,0x804a040
 804855a:	c1 f8 02             	sar    eax,0x2
 804855d:	89 c2                	mov    edx,eax
 804855f:	c1 ea 1f             	shr    edx,0x1f
 8048562:	01 d0                	add    eax,edx
 8048564:	d1 f8                	sar    eax,1
 8048566:	75 02                	jne    804856a <register_tm_clones+0x1a>
 8048568:	f3 c3                	repz ret 
 804856a:	ba 00 00 00 00       	mov    edx,0x0
 804856f:	85 d2                	test   edx,edx
 8048571:	74 f5                	je     8048568 <register_tm_clones+0x18>
 8048573:	55                   	push   ebp
 8048574:	89 e5                	mov    ebp,esp
 8048576:	83 ec 18             	sub    esp,0x18
 8048579:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 804857d:	c7 04 24 40 a0 04 08 	mov    DWORD PTR [esp],0x804a040
 8048584:	ff d2                	call   edx
 8048586:	c9                   	leave  
 8048587:	c3                   	ret    
 8048588:	90                   	nop
 8048589:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

08048590 <__do_global_dtors_aux>:
 8048590:	80 3d 40 a0 04 08 00 	cmp    BYTE PTR ds:0x804a040,0x0
 8048597:	75 13                	jne    80485ac <__do_global_dtors_aux+0x1c>
 8048599:	55                   	push   ebp
 804859a:	89 e5                	mov    ebp,esp
 804859c:	83 ec 08             	sub    esp,0x8
 804859f:	e8 7c ff ff ff       	call   8048520 <deregister_tm_clones>
 80485a4:	c6 05 40 a0 04 08 01 	mov    BYTE PTR ds:0x804a040,0x1
 80485ab:	c9                   	leave  
 80485ac:	f3 c3                	repz ret 
 80485ae:	66 90                	xchg   ax,ax

080485b0 <frame_dummy>:
 80485b0:	a1 0c 9f 04 08       	mov    eax,ds:0x8049f0c
 80485b5:	85 c0                	test   eax,eax
 80485b7:	74 1e                	je     80485d7 <frame_dummy+0x27>
 80485b9:	b8 00 00 00 00       	mov    eax,0x0
 80485be:	85 c0                	test   eax,eax
 80485c0:	74 15                	je     80485d7 <frame_dummy+0x27>
 80485c2:	55                   	push   ebp
 80485c3:	89 e5                	mov    ebp,esp
 80485c5:	83 ec 18             	sub    esp,0x18
 80485c8:	c7 04 24 0c 9f 04 08 	mov    DWORD PTR [esp],0x8049f0c
 80485cf:	ff d0                	call   eax
 80485d1:	c9                   	leave  
 80485d2:	e9 79 ff ff ff       	jmp    8048550 <register_tm_clones>
 80485d7:	e9 74 ff ff ff       	jmp    8048550 <register_tm_clones>

080485dc <tty_reset>:
 80485dc:	55                   	push   ebp
 80485dd:	89 e5                	mov    ebp,esp
 80485df:	83 ec 18             	sub    esp,0x18
 80485e2:	a1 44 a0 04 08       	mov    eax,ds:0x804a044
 80485e7:	c7 44 24 08 60 a0 04 	mov    DWORD PTR [esp+0x8],0x804a060
 80485ee:	08 
 80485ef:	c7 44 24 04 02 00 00 	mov    DWORD PTR [esp+0x4],0x2
 80485f6:	00 
 80485f7:	89 04 24             	mov    DWORD PTR [esp],eax
 80485fa:	e8 81 fe ff ff       	call   8048480 <tcsetattr@plt>
 80485ff:	85 c0                	test   eax,eax
 8048601:	79 07                	jns    804860a <tty_reset+0x2e>
 8048603:	b8 ff ff ff ff       	mov    eax,0xffffffff
 8048608:	eb 05                	jmp    804860f <tty_reset+0x33>
 804860a:	b8 00 00 00 00       	mov    eax,0x0
 804860f:	c9                   	leave  
 8048610:	c3                   	ret    

08048611 <tty_exit>:
 8048611:	55                   	push   ebp
 8048612:	89 e5                	mov    ebp,esp
 8048614:	83 ec 08             	sub    esp,0x8
 8048617:	e8 c0 ff ff ff       	call   80485dc <tty_reset>
 804861c:	c9                   	leave  
 804861d:	c3                   	ret    

0804861e <main>:
 804861e:	55                   	push   ebp
 804861f:	89 e5                	mov    ebp,esp
 8048621:	83 e4 f0             	and    esp,0xfffffff0
 8048624:	83 ec 20             	sub    esp,0x20
 8048627:	a1 44 a0 04 08       	mov    eax,ds:0x804a044
 804862c:	89 04 24             	mov    DWORD PTR [esp],eax
 804862f:	e8 9c fe ff ff       	call   80484d0 <isatty@plt>
 8048634:	85 c0                	test   eax,eax
 8048636:	75 0c                	jne    8048644 <main+0x26>
 8048638:	c7 04 24 8c 88 04 08 	mov    DWORD PTR [esp],0x804888c
 804863f:	e8 2c fe ff ff       	call   8048470 <perror@plt>
 8048644:	a1 44 a0 04 08       	mov    eax,ds:0x804a044
 8048649:	c7 44 24 04 60 a0 04 	mov    DWORD PTR [esp+0x4],0x804a060
 8048650:	08 
 8048651:	89 04 24             	mov    DWORD PTR [esp],eax
 8048654:	e8 87 fe ff ff       	call   80484e0 <tcgetattr@plt>
 8048659:	85 c0                	test   eax,eax
 804865b:	79 0c                	jns    8048669 <main+0x4b>
 804865d:	c7 04 24 99 88 04 08 	mov    DWORD PTR [esp],0x8048899
 8048664:	e8 07 fe ff ff       	call   8048470 <perror@plt>
 8048669:	c7 04 24 11 86 04 08 	mov    DWORD PTR [esp],0x8048611
 8048670:	e8 bb 01 00 00       	call   8048830 <atexit>
 8048675:	e8 47 00 00 00       	call   80486c1 <tty_raw>
 804867a:	c7 44 24 1c 00 00 00 	mov    DWORD PTR [esp+0x1c],0x0
 8048681:	00 
 8048682:	c7 04 24 b0 88 04 08 	mov    DWORD PTR [esp],0x80488b0
 8048689:	e8 b2 fd ff ff       	call   8048440 <printf@plt>
 804868e:	eb 23                	jmp    80486b3 <main+0x95>
 8048690:	e8 bb fd ff ff       	call   8048450 <getchar@plt>
 8048695:	88 44 24 1b          	mov    BYTE PTR [esp+0x1b],al
 8048699:	80 7c 24 1b 0d       	cmp    BYTE PTR [esp+0x1b],0xd
 804869e:	75 0e                	jne    80486ae <main+0x90>
 80486a0:	c7 04 24 bd 88 04 08 	mov    DWORD PTR [esp],0x80488bd
 80486a7:	e8 f4 fd ff ff       	call   80484a0 <puts@plt>
 80486ac:	eb 0c                	jmp    80486ba <main+0x9c>
 80486ae:	83 44 24 1c 01       	add    DWORD PTR [esp+0x1c],0x1
 80486b3:	83 7c 24 1c 3f       	cmp    DWORD PTR [esp+0x1c],0x3f
 80486b8:	7e d6                	jle    8048690 <main+0x72>
 80486ba:	b8 00 00 00 00       	mov    eax,0x0
 80486bf:	c9                   	leave  
 80486c0:	c3                   	ret    

080486c1 <tty_raw>:
 80486c1:	55                   	push   ebp
 80486c2:	89 e5                	mov    ebp,esp
 80486c4:	83 ec 58             	sub    esp,0x58
 80486c7:	65 a1 14 00 00 00    	mov    eax,gs:0x14
 80486cd:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
 80486d0:	31 c0                	xor    eax,eax
 80486d2:	a1 60 a0 04 08       	mov    eax,ds:0x804a060
 80486d7:	89 45 b8             	mov    DWORD PTR [ebp-0x48],eax
 80486da:	a1 64 a0 04 08       	mov    eax,ds:0x804a064
 80486df:	89 45 bc             	mov    DWORD PTR [ebp-0x44],eax
 80486e2:	a1 68 a0 04 08       	mov    eax,ds:0x804a068
 80486e7:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
 80486ea:	a1 6c a0 04 08       	mov    eax,ds:0x804a06c
 80486ef:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
 80486f2:	a1 70 a0 04 08       	mov    eax,ds:0x804a070
 80486f7:	89 45 c8             	mov    DWORD PTR [ebp-0x38],eax
 80486fa:	a1 74 a0 04 08       	mov    eax,ds:0x804a074
 80486ff:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
 8048702:	a1 78 a0 04 08       	mov    eax,ds:0x804a078
 8048707:	89 45 d0             	mov    DWORD PTR [ebp-0x30],eax
 804870a:	a1 7c a0 04 08       	mov    eax,ds:0x804a07c
 804870f:	89 45 d4             	mov    DWORD PTR [ebp-0x2c],eax
 8048712:	a1 80 a0 04 08       	mov    eax,ds:0x804a080
 8048717:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
 804871a:	a1 84 a0 04 08       	mov    eax,ds:0x804a084
 804871f:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
 8048722:	a1 88 a0 04 08       	mov    eax,ds:0x804a088
 8048727:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
 804872a:	a1 8c a0 04 08       	mov    eax,ds:0x804a08c
 804872f:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
 8048732:	a1 90 a0 04 08       	mov    eax,ds:0x804a090
 8048737:	89 45 e8             	mov    DWORD PTR [ebp-0x18],eax
 804873a:	a1 94 a0 04 08       	mov    eax,ds:0x804a094
 804873f:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
 8048742:	a1 98 a0 04 08       	mov    eax,ds:0x804a098
 8048747:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
 804874a:	8b 45 b8             	mov    eax,DWORD PTR [ebp-0x48]
 804874d:	25 cd fa ff ff       	and    eax,0xfffffacd
 8048752:	89 45 b8             	mov    DWORD PTR [ebp-0x48],eax
 8048755:	8b 45 c0             	mov    eax,DWORD PTR [ebp-0x40]
 8048758:	83 c8 30             	or     eax,0x30
 804875b:	89 45 c0             	mov    DWORD PTR [ebp-0x40],eax
 804875e:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
 8048761:	25 f4 7f ff ff       	and    eax,0xffff7ff4
 8048766:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
 8048769:	c6 45 cf 01          	mov    BYTE PTR [ebp-0x31],0x1
 804876d:	c6 45 ce 00          	mov    BYTE PTR [ebp-0x32],0x0
 8048771:	a1 44 a0 04 08       	mov    eax,ds:0x804a044
 8048776:	8d 55 b8             	lea    edx,[ebp-0x48]
 8048779:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
 804877d:	c7 44 24 04 02 00 00 	mov    DWORD PTR [esp+0x4],0x2
 8048784:	00 
 8048785:	89 04 24             	mov    DWORD PTR [esp],eax
 8048788:	e8 f3 fc ff ff       	call   8048480 <tcsetattr@plt>
 804878d:	85 c0                	test   eax,eax
 804878f:	79 0c                	jns    804879d <tty_raw+0xdc>
 8048791:	c7 04 24 bf 88 04 08 	mov    DWORD PTR [esp],0x80488bf
 8048798:	e8 d3 fc ff ff       	call   8048470 <perror@plt>
 804879d:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
 80487a0:	65 33 05 14 00 00 00 	xor    eax,DWORD PTR gs:0x14
 80487a7:	74 05                	je     80487ae <tty_raw+0xed>
 80487a9:	e8 b2 fc ff ff       	call   8048460 <__stack_chk_fail@plt>
 80487ae:	c9                   	leave  
 80487af:	c3                   	ret    

080487b0 <__libc_csu_init>:
 80487b0:	55                   	push   ebp
 80487b1:	57                   	push   edi
 80487b2:	56                   	push   esi
 80487b3:	53                   	push   ebx
 80487b4:	e8 69 00 00 00       	call   8048822 <__i686.get_pc_thunk.bx>
 80487b9:	81 c3 47 18 00 00    	add    ebx,0x1847
 80487bf:	83 ec 1c             	sub    esp,0x1c
 80487c2:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
 80487c6:	8d bb 08 ff ff ff    	lea    edi,[ebx-0xf8]
 80487cc:	e8 37 fc ff ff       	call   8048408 <_init>
 80487d1:	8d 83 04 ff ff ff    	lea    eax,[ebx-0xfc]
 80487d7:	29 c7                	sub    edi,eax
 80487d9:	c1 ff 02             	sar    edi,0x2
 80487dc:	85 ff                	test   edi,edi
 80487de:	74 29                	je     8048809 <__libc_csu_init+0x59>
 80487e0:	31 f6                	xor    esi,esi
 80487e2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 80487e8:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
 80487ec:	89 2c 24             	mov    DWORD PTR [esp],ebp
 80487ef:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 80487f3:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
 80487f7:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 80487fb:	ff 94 b3 04 ff ff ff 	call   DWORD PTR [ebx+esi*4-0xfc]
 8048802:	83 c6 01             	add    esi,0x1
 8048805:	39 fe                	cmp    esi,edi
 8048807:	75 df                	jne    80487e8 <__libc_csu_init+0x38>
 8048809:	83 c4 1c             	add    esp,0x1c
 804880c:	5b                   	pop    ebx
 804880d:	5e                   	pop    esi
 804880e:	5f                   	pop    edi
 804880f:	5d                   	pop    ebp
 8048810:	c3                   	ret    
 8048811:	eb 0d                	jmp    8048820 <__libc_csu_fini>
 8048813:	90                   	nop
 8048814:	90                   	nop
 8048815:	90                   	nop
 8048816:	90                   	nop
 8048817:	90                   	nop
 8048818:	90                   	nop
 8048819:	90                   	nop
 804881a:	90                   	nop
 804881b:	90                   	nop
 804881c:	90                   	nop
 804881d:	90                   	nop
 804881e:	90                   	nop
 804881f:	90                   	nop

08048820 <__libc_csu_fini>:
 8048820:	f3 c3                	repz ret 

08048822 <__i686.get_pc_thunk.bx>:
 8048822:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 8048825:	c3                   	ret    
 8048826:	66 90                	xchg   ax,ax
 8048828:	66 90                	xchg   ax,ax
 804882a:	66 90                	xchg   ax,ax
 804882c:	66 90                	xchg   ax,ax
 804882e:	66 90                	xchg   ax,ax

08048830 <atexit>:
 8048830:	53                   	push   ebx
 8048831:	e8 ec ff ff ff       	call   8048822 <__i686.get_pc_thunk.bx>
 8048836:	81 c3 ca 17 00 00    	add    ebx,0x17ca
 804883c:	83 ec 18             	sub    esp,0x18
 804883f:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 8048845:	85 c0                	test   eax,eax
 8048847:	74 1f                	je     8048868 <atexit+0x38>
 8048849:	8b 00                	mov    eax,DWORD PTR [eax]
 804884b:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 804884f:	8b 44 24 20          	mov    eax,DWORD PTR [esp+0x20]
 8048853:	c7 44 24 04 00 00 00 	mov    DWORD PTR [esp+0x4],0x0
 804885a:	00 
 804885b:	89 04 24             	mov    DWORD PTR [esp],eax
 804885e:	e8 2d fc ff ff       	call   8048490 <__cxa_atexit@plt>
 8048863:	83 c4 18             	add    esp,0x18
 8048866:	5b                   	pop    ebx
 8048867:	c3                   	ret    
 8048868:	31 c0                	xor    eax,eax
 804886a:	eb df                	jmp    804884b <atexit+0x1b>

Disassembly of section .fini:

0804886c <_fini>:
 804886c:	53                   	push   ebx
 804886d:	83 ec 08             	sub    esp,0x8
 8048870:	e8 00 00 00 00       	call   8048875 <_fini+0x9>
 8048875:	5b                   	pop    ebx
 8048876:	81 c3 8b 17 00 00    	add    ebx,0x178b
 804887c:	83 c4 08             	add    esp,0x8
 804887f:	5b                   	pop    ebx
 8048880:	c3                   	ret    

Disassembly of section .rodata:

08048884 <_fp_hw>:
 8048884:	03 00                	add    eax,DWORD PTR [eax]
	...

08048888 <_IO_stdin_used>:
 8048888:	01 00                	add    DWORD PTR [eax],eax
 804888a:	02 00                	add    al,BYTE PTR [eax]
 804888c:	6e                   	outs   dx,BYTE PTR ds:[esi]
 804888d:	6f                   	outs   dx,DWORD PTR ds:[esi]
 804888e:	74 20                	je     80488b0 <_IO_stdin_used+0x28>
 8048890:	6f                   	outs   dx,DWORD PTR ds:[esi]
 8048891:	6e                   	outs   dx,BYTE PTR ds:[esi]
 8048892:	20 61 20             	and    BYTE PTR [ecx+0x20],ah
 8048895:	74 74                	je     804890b <_IO_stdin_used+0x83>
 8048897:	79 00                	jns    8048899 <_IO_stdin_used+0x11>
 8048899:	63 61 6e             	arpl   WORD PTR [ecx+0x6e],sp
 804889c:	27                   	daa    
 804889d:	74 20                	je     80488bf <_IO_stdin_used+0x37>
 804889f:	67                   	addr16
 80488a0:	65                   	gs
 80488a1:	74 20                	je     80488c3 <_IO_stdin_used+0x3b>
 80488a3:	74 74                	je     8048919 <_IO_stdin_used+0x91>
 80488a5:	79 20                	jns    80488c7 <_IO_stdin_used+0x3f>
 80488a7:	73 65                	jae    804890e <_IO_stdin_used+0x86>
 80488a9:	74 74                	je     804891f <_IO_stdin_used+0x97>
 80488ab:	69 6e 67 73 00 54 68 	imul   ebp,DWORD PTR [esi+0x67],0x68540073
 80488b2:	65 20 6b 65          	and    BYTE PTR gs:[ebx+0x65],ch
 80488b6:	79 20                	jns    80488d8 <_IO_stdin_used+0x50>
 80488b8:	69 73 3a 20 00 0d 00 	imul   esi,DWORD PTR [ebx+0x3a],0xd0020
 80488bf:	63 61 6e             	arpl   WORD PTR [ecx+0x6e],sp
 80488c2:	27                   	daa    
 80488c3:	74 20                	je     80488e5 <_IO_stdin_used+0x5d>
 80488c5:	73 65                	jae    804892c <_IO_stdin_used+0xa4>
 80488c7:	74 20                	je     80488e9 <_IO_stdin_used+0x61>
 80488c9:	72 61                	jb     804892c <_IO_stdin_used+0xa4>
 80488cb:	77 20                	ja     80488ed <_IO_stdin_used+0x65>
 80488cd:	6d                   	ins    DWORD PTR es:[edi],dx
 80488ce:	6f                   	outs   dx,DWORD PTR ds:[esi]
 80488cf:	64                   	fs
 80488d0:	65                   	gs
	...

Disassembly of section .eh_frame_hdr:

080488d4 <.eh_frame_hdr>:
 80488d4:	01 1b                	add    DWORD PTR [ebx],ebx
 80488d6:	03 3b                	add    edi,DWORD PTR [ebx]
 80488d8:	50                   	push   eax
 80488d9:	00 00                	add    BYTE PTR [eax],al
 80488db:	00 09                	add    BYTE PTR [ecx],cl
 80488dd:	00 00                	add    BYTE PTR [eax],al
 80488df:	00 5c fb ff          	add    BYTE PTR [ebx+edi*8-0x1],bl
 80488e3:	ff 6c 00 00          	jmp    FWORD PTR [eax+eax*1+0x0]
 80488e7:	00 08                	add    BYTE PTR [eax],cl
 80488e9:	fd                   	std    
 80488ea:	ff                   	(bad)  
 80488eb:	ff 90 00 00 00 3d    	call   DWORD PTR [eax+0x3d000000]
 80488f1:	fd                   	std    
 80488f2:	ff                   	(bad)  
 80488f3:	ff b0 00 00 00 4a    	push   DWORD PTR [eax+0x4a000000]
 80488f9:	fd                   	std    
 80488fa:	ff                   	(bad)  
 80488fb:	ff d0                	call   eax
 80488fd:	00 00                	add    BYTE PTR [eax],al
 80488ff:	00 ed                	add    ch,ch
 8048901:	fd                   	std    
 8048902:	ff                   	(bad)  
 8048903:	ff f0                	push   eax
 8048905:	00 00                	add    BYTE PTR [eax],al
 8048907:	00 dc                	add    ah,bl
 8048909:	fe                   	(bad)  
 804890a:	ff                   	(bad)  
 804890b:	ff 10                	call   DWORD PTR [eax]
 804890d:	01 00                	add    DWORD PTR [eax],eax
 804890f:	00 4c ff ff          	add    BYTE PTR [edi+edi*8-0x1],cl
 8048913:	ff 4c 01 00          	dec    DWORD PTR [ecx+eax*1+0x0]
 8048917:	00 4e ff             	add    BYTE PTR [esi-0x1],cl
 804891a:	ff                   	(bad)  
 804891b:	ff 60 01             	jmp    DWORD PTR [eax+0x1]
 804891e:	00 00                	add    BYTE PTR [eax],al
 8048920:	5c                   	pop    esp
 8048921:	ff                   	(bad)  
 8048922:	ff                   	(bad)  
 8048923:	ff 74 01 00          	push   DWORD PTR [ecx+eax*1+0x0]
	...

Disassembly of section .eh_frame:

08048928 <__FRAME_END__-0x144>:
 8048928:	14 00                	adc    al,0x0
 804892a:	00 00                	add    BYTE PTR [eax],al
 804892c:	00 00                	add    BYTE PTR [eax],al
 804892e:	00 00                	add    BYTE PTR [eax],al
 8048930:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
 8048933:	00 01                	add    BYTE PTR [ecx],al
 8048935:	7c 08                	jl     804893f <_IO_stdin_used+0xb7>
 8048937:	01 1b                	add    DWORD PTR [ebx],ebx
 8048939:	0c 04                	or     al,0x4
 804893b:	04 88                	add    al,0x88
 804893d:	01 00                	add    DWORD PTR [eax],eax
 804893f:	00 20                	add    BYTE PTR [eax],ah
 8048941:	00 00                	add    BYTE PTR [eax],al
 8048943:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 8048946:	00 00                	add    BYTE PTR [eax],al
 8048948:	e8 fa ff ff c0       	call   c9048947 <_end+0xc0ffe8ab>
 804894d:	00 00                	add    BYTE PTR [eax],al
 804894f:	00 00                	add    BYTE PTR [eax],al
 8048951:	0e                   	push   cs
 8048952:	08 46 0e             	or     BYTE PTR [esi+0xe],al
 8048955:	0c 4a                	or     al,0x4a
 8048957:	0f 0b                	ud2    
 8048959:	74 04                	je     804895f <_IO_stdin_used+0xd7>
 804895b:	78 00                	js     804895d <_IO_stdin_used+0xd5>
 804895d:	3f                   	aas    
 804895e:	1a 3b                	sbb    bh,BYTE PTR [ebx]
 8048960:	2a 32                	sub    dh,BYTE PTR [edx]
 8048962:	24 22                	and    al,0x22
 8048964:	1c 00                	sbb    al,0x0
 8048966:	00 00                	add    BYTE PTR [eax],al
 8048968:	40                   	inc    eax
 8048969:	00 00                	add    BYTE PTR [eax],al
 804896b:	00 70 fc             	add    BYTE PTR [eax-0x4],dh
 804896e:	ff                   	(bad)  
 804896f:	ff 35 00 00 00 00    	push   DWORD PTR ds:0x0
 8048975:	41                   	inc    ecx
 8048976:	0e                   	push   cs
 8048977:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 804897d:	71 c5                	jno    8048944 <_IO_stdin_used+0xbc>
 804897f:	0c 04                	or     al,0x4
 8048981:	04 00                	add    al,0x0
 8048983:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 8048986:	00 00                	add    BYTE PTR [eax],al
 8048988:	60                   	pusha  
 8048989:	00 00                	add    BYTE PTR [eax],al
 804898b:	00 85 fc ff ff 0d    	add    BYTE PTR [ebp+0xdfffffc],al
 8048991:	00 00                	add    BYTE PTR [eax],al
 8048993:	00 00                	add    BYTE PTR [eax],al
 8048995:	41                   	inc    ecx
 8048996:	0e                   	push   cs
 8048997:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 804899d:	49                   	dec    ecx
 804899e:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
 80489a1:	04 00                	add    al,0x0
 80489a3:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 80489a6:	00 00                	add    BYTE PTR [eax],al
 80489a8:	80 00 00             	add    BYTE PTR [eax],0x0
 80489ab:	00 72 fc             	add    BYTE PTR [edx-0x4],dh
 80489ae:	ff                   	(bad)  
 80489af:	ff a3 00 00 00 00    	jmp    DWORD PTR [ebx+0x0]
 80489b5:	41                   	inc    ecx
 80489b6:	0e                   	push   cs
 80489b7:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 80489bd:	02 9f c5 0c 04 04    	add    bl,BYTE PTR [edi+0x4040cc5]
 80489c3:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 80489c6:	00 00                	add    BYTE PTR [eax],al
 80489c8:	a0 00 00 00 f5       	mov    al,ds:0xf5000000
 80489cd:	fc                   	cld    
 80489ce:	ff                   	(bad)  
 80489cf:	ff ef                	jmp    <internal disassembler error>
 80489d1:	00 00                	add    BYTE PTR [eax],al
 80489d3:	00 00                	add    BYTE PTR [eax],al
 80489d5:	41                   	inc    ecx
 80489d6:	0e                   	push   cs
 80489d7:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
 80489dd:	02 eb                	add    ch,bl
 80489df:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
 80489e2:	04 00                	add    al,0x0
 80489e4:	38 00                	cmp    BYTE PTR [eax],al
 80489e6:	00 00                	add    BYTE PTR [eax],al
 80489e8:	c0 00 00             	rol    BYTE PTR [eax],0x0
 80489eb:	00 c4                	add    ah,al
 80489ed:	fd                   	std    
 80489ee:	ff                   	(bad)  
 80489ef:	ff 61 00             	jmp    DWORD PTR [ecx+0x0]
 80489f2:	00 00                	add    BYTE PTR [eax],al
 80489f4:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 80489f7:	08 85 02 41 0e 0c    	or     BYTE PTR [ebp+0xc0e4102],al
 80489fd:	87 03                	xchg   DWORD PTR [ebx],eax
 80489ff:	41                   	inc    ecx
 8048a00:	0e                   	push   cs
 8048a01:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
 8048a07:	83 05 4e 0e 30 02 4a 	add    DWORD PTR ds:0x2300e4e,0x4a
 8048a0e:	0e                   	push   cs
 8048a0f:	14 41                	adc    al,0x41
 8048a11:	0e                   	push   cs
 8048a12:	10 c3                	adc    bl,al
 8048a14:	41                   	inc    ecx
 8048a15:	0e                   	push   cs
 8048a16:	0c c6                	or     al,0xc6
 8048a18:	41                   	inc    ecx
 8048a19:	0e                   	push   cs
 8048a1a:	08 c7                	or     bh,al
 8048a1c:	41                   	inc    ecx
 8048a1d:	0e                   	push   cs
 8048a1e:	04 c5                	add    al,0xc5
 8048a20:	10 00                	adc    BYTE PTR [eax],al
 8048a22:	00 00                	add    BYTE PTR [eax],al
 8048a24:	fc                   	cld    
 8048a25:	00 00                	add    BYTE PTR [eax],al
 8048a27:	00 f8                	add    al,bh
 8048a29:	fd                   	std    
 8048a2a:	ff                   	(bad)  
 8048a2b:	ff 02                	inc    DWORD PTR [edx]
 8048a2d:	00 00                	add    BYTE PTR [eax],al
 8048a2f:	00 00                	add    BYTE PTR [eax],al
 8048a31:	00 00                	add    BYTE PTR [eax],al
 8048a33:	00 10                	add    BYTE PTR [eax],dl
 8048a35:	00 00                	add    BYTE PTR [eax],al
 8048a37:	00 10                	add    BYTE PTR [eax],dl
 8048a39:	01 00                	add    DWORD PTR [eax],eax
 8048a3b:	00 e6                	add    dh,ah
 8048a3d:	fd                   	std    
 8048a3e:	ff                   	(bad)  
 8048a3f:	ff 04 00             	inc    DWORD PTR [eax+eax*1]
 8048a42:	00 00                	add    BYTE PTR [eax],al
 8048a44:	00 00                	add    BYTE PTR [eax],al
 8048a46:	00 00                	add    BYTE PTR [eax],al
 8048a48:	20 00                	and    BYTE PTR [eax],al
 8048a4a:	00 00                	add    BYTE PTR [eax],al
 8048a4c:	24 01                	and    al,0x1
 8048a4e:	00 00                	add    BYTE PTR [eax],al
 8048a50:	e0 fd                	loopne 8048a4f <_IO_stdin_used+0x1c7>
 8048a52:	ff                   	(bad)  
 8048a53:	ff                   	(bad)  
 8048a54:	3c 00                	cmp    al,0x0
 8048a56:	00 00                	add    BYTE PTR [eax],al
 8048a58:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 8048a5b:	08 83 02 4e 0e 20    	or     BYTE PTR [ebx+0x200e4e02],al
 8048a61:	67 0a 0e 08 41       	or     cl,BYTE PTR ds:0x4108
 8048a66:	0e                   	push   cs
 8048a67:	04 c3                	add    al,0xc3
 8048a69:	41                   	inc    ecx
 8048a6a:	0b 00                	or     eax,DWORD PTR [eax]

08048a6c <__FRAME_END__>:
 8048a6c:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .init_array:

08049f04 <__frame_dummy_init_array_entry>:
 8049f04:	b0 85                	mov    al,0x85
 8049f06:	04 08                	add    al,0x8

Disassembly of section .fini_array:

08049f08 <__do_global_dtors_aux_fini_array_entry>:
 8049f08:	90                   	nop
 8049f09:	85 04 08             	test   DWORD PTR [eax+ecx*1],eax

Disassembly of section .jcr:

08049f0c <__JCR_END__>:
 8049f0c:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .dynamic:

08049f10 <_DYNAMIC>:
 8049f10:	01 00                	add    DWORD PTR [eax],eax
 8049f12:	00 00                	add    BYTE PTR [eax],al
 8049f14:	10 00                	adc    BYTE PTR [eax],al
 8049f16:	00 00                	add    BYTE PTR [eax],al
 8049f18:	0c 00                	or     al,0x0
 8049f1a:	00 00                	add    BYTE PTR [eax],al
 8049f1c:	08 84 04 08 0d 00 00 	or     BYTE PTR [esp+eax*1+0xd08],al
 8049f23:	00 6c 88 04          	add    BYTE PTR [eax+ecx*4+0x4],ch
 8049f27:	08 19                	or     BYTE PTR [ecx],bl
 8049f29:	00 00                	add    BYTE PTR [eax],al
 8049f2b:	00 04 9f             	add    BYTE PTR [edi+ebx*4],al
 8049f2e:	04 08                	add    al,0x8
 8049f30:	1b 00                	sbb    eax,DWORD PTR [eax]
 8049f32:	00 00                	add    BYTE PTR [eax],al
 8049f34:	04 00                	add    al,0x0
 8049f36:	00 00                	add    BYTE PTR [eax],al
 8049f38:	1a 00                	sbb    al,BYTE PTR [eax]
 8049f3a:	00 00                	add    BYTE PTR [eax],al
 8049f3c:	08 9f 04 08 1c 00    	or     BYTE PTR [edi+0x1c0804],bl
 8049f42:	00 00                	add    BYTE PTR [eax],al
 8049f44:	04 00                	add    al,0x0
 8049f46:	00 00                	add    BYTE PTR [eax],al
 8049f48:	f5                   	cmc    
 8049f49:	fe                   	(bad)  
 8049f4a:	ff 6f ac             	jmp    FWORD PTR [edi-0x54]
 8049f4d:	81 04 08 05 00 00 00 	add    DWORD PTR [eax+ecx*1],0x5
 8049f54:	9c                   	pushf  
 8049f55:	82                   	(bad)  
 8049f56:	04 08                	add    al,0x8
 8049f58:	06                   	push   es
 8049f59:	00 00                	add    BYTE PTR [eax],al
 8049f5b:	00 cc                	add    ah,cl
 8049f5d:	81 04 08 0a 00 00 00 	add    DWORD PTR [eax+ecx*1],0xa
 8049f64:	af                   	scas   eax,DWORD PTR es:[edi]
 8049f65:	00 00                	add    BYTE PTR [eax],al
 8049f67:	00 0b                	add    BYTE PTR [ebx],cl
 8049f69:	00 00                	add    BYTE PTR [eax],al
 8049f6b:	00 10                	add    BYTE PTR [eax],dl
 8049f6d:	00 00                	add    BYTE PTR [eax],al
 8049f6f:	00 15 00 00 00 00    	add    BYTE PTR ds:0x0,dl
 8049f75:	00 00                	add    BYTE PTR [eax],al
 8049f77:	00 03                	add    BYTE PTR [ebx],al
 8049f79:	00 00                	add    BYTE PTR [eax],al
 8049f7b:	00 00                	add    BYTE PTR [eax],al
 8049f7d:	a0 04 08 02 00       	mov    al,ds:0x20804
 8049f82:	00 00                	add    BYTE PTR [eax],al
 8049f84:	58                   	pop    eax
 8049f85:	00 00                	add    BYTE PTR [eax],al
 8049f87:	00 14 00             	add    BYTE PTR [eax+eax*1],dl
 8049f8a:	00 00                	add    BYTE PTR [eax],al
 8049f8c:	11 00                	adc    DWORD PTR [eax],eax
 8049f8e:	00 00                	add    BYTE PTR [eax],al
 8049f90:	17                   	pop    ss
 8049f91:	00 00                	add    BYTE PTR [eax],al
 8049f93:	00 b0 83 04 08 11    	add    BYTE PTR [eax+0x11080483],dh
 8049f99:	00 00                	add    BYTE PTR [eax],al
 8049f9b:	00 a8 83 04 08 12    	add    BYTE PTR [eax+0x12080483],ch
 8049fa1:	00 00                	add    BYTE PTR [eax],al
 8049fa3:	00 08                	add    BYTE PTR [eax],cl
 8049fa5:	00 00                	add    BYTE PTR [eax],al
 8049fa7:	00 13                	add    BYTE PTR [ebx],dl
 8049fa9:	00 00                	add    BYTE PTR [eax],al
 8049fab:	00 08                	add    BYTE PTR [eax],cl
 8049fad:	00 00                	add    BYTE PTR [eax],al
 8049faf:	00 fe                	add    dh,bh
 8049fb1:	ff                   	(bad)  
 8049fb2:	ff 6f 68             	jmp    FWORD PTR [edi+0x68]
 8049fb5:	83 04 08 ff          	add    DWORD PTR [eax+ecx*1],0xffffffff
 8049fb9:	ff                   	(bad)  
 8049fba:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
 8049fbd:	00 00                	add    BYTE PTR [eax],al
 8049fbf:	00 f0                	add    al,dh
 8049fc1:	ff                   	(bad)  
 8049fc2:	ff 6f 4c             	jmp    FWORD PTR [edi+0x4c]
 8049fc5:	83 04 08 00          	add    DWORD PTR [eax+ecx*1],0x0
	...

Disassembly of section .got:

08049ff8 <.got>:
 8049ff8:	00 00                	add    BYTE PTR [eax],al
 8049ffa:	00 00                	add    BYTE PTR [eax],al
 8049ffc:	3c a0                	cmp    al,0xa0
 8049ffe:	04 08                	add    al,0x8

Disassembly of section .got.plt:

0804a000 <_GLOBAL_OFFSET_TABLE_>:
 804a000:	10 9f 04 08 00 00    	adc    BYTE PTR [edi+0x804],bl
 804a006:	00 00                	add    BYTE PTR [eax],al
 804a008:	00 00                	add    BYTE PTR [eax],al
 804a00a:	00 00                	add    BYTE PTR [eax],al
 804a00c:	46                   	inc    esi
 804a00d:	84 04 08             	test   BYTE PTR [eax+ecx*1],al
 804a010:	56                   	push   esi
 804a011:	84 04 08             	test   BYTE PTR [eax+ecx*1],al
 804a014:	66                   	data16
 804a015:	84 04 08             	test   BYTE PTR [eax+ecx*1],al
 804a018:	76 84                	jbe    8049f9e <_DYNAMIC+0x8e>
 804a01a:	04 08                	add    al,0x8
 804a01c:	86 84 04 08 96 84 04 	xchg   BYTE PTR [esp+eax*1+0x4849608],al
 804a023:	08 a6 84 04 08 b6    	or     BYTE PTR [esi-0x49f7fb7c],ah
 804a029:	84 04 08             	test   BYTE PTR [eax+ecx*1],al
 804a02c:	c6 84 04 08 d6 84 04 	mov    BYTE PTR [esp+eax*1+0x484d608],0x8
 804a033:	08 
 804a034:	e6 84                	out    0x84,al
 804a036:	04 08                	add    al,0x8

Disassembly of section .data:

0804a038 <__data_start>:
 804a038:	00 00                	add    BYTE PTR [eax],al
	...

0804a03c <__dso_handle>:
 804a03c:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .bss:

0804a040 <__bss_start>:
 804a040:	00 00                	add    BYTE PTR [eax],al
	...

0804a044 <ttyfd>:
	...

0804a060 <orig_termios>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x8048390>
   a:	74 75                	je     81 <_init-0x8048387>
   c:	2f                   	das    
   d:	4c                   	dec    esp
   e:	69 6e 61 72 6f 20 34 	imul   ebp,DWORD PTR [esi+0x61],0x34206f72
  15:	2e                   	cs
  16:	37                   	aaa    
  17:	2e 32 2d 32 75 62 75 	xor    ch,BYTE PTR cs:0x75627532
  1e:	6e                   	outs   dx,BYTE PTR ds:[esi]
  1f:	74 75                	je     96 <_init-0x8048372>
  21:	31 29                	xor    DWORD PTR [ecx],ebp
  23:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  26:	37                   	aaa    
  27:	2e 32 00             	xor    al,BYTE PTR cs:[eax]
  2a:	47                   	inc    edi
  2b:	43                   	inc    ebx
  2c:	43                   	inc    ebx
  2d:	3a 20                	cmp    ah,BYTE PTR [eax]
  2f:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
  32:	75 6e                	jne    a2 <_init-0x8048366>
  34:	74 75                	je     ab <_init-0x804835d>
  36:	2f                   	das    
  37:	4c                   	dec    esp
  38:	69 6e 61 72 6f 20 34 	imul   ebp,DWORD PTR [esi+0x61],0x34206f72
  3f:	2e 36 2e 33 2d 31 30 	cs ss xor ebp,DWORD PTR cs:ss:0x62753031
  46:	75 62 
  48:	75 6e                	jne    b8 <_init-0x8048350>
  4a:	74 75                	je     c1 <_init-0x8048347>
  4c:	31 29                	xor    DWORD PTR [ecx],ebp
  4e:	20 34 2e             	and    BYTE PTR [esi+ebp*1],dh
  51:	36 2e 33 20          	ss xor esp,DWORD PTR cs:ss:[eax]
  55:	32 30                	xor    dh,BYTE PTR [eax]
  57:	31 32                	xor    DWORD PTR [edx],esi
  59:	30 39                	xor    BYTE PTR [ecx],bh
  5b:	31 38                	xor    DWORD PTR [eax],edi
  5d:	20 28                	and    BYTE PTR [eax],ch
  5f:	70 72                	jo     d3 <_init-0x8048335>
  61:	65                   	gs
  62:	72 65                	jb     c9 <_init-0x804833f>
  64:	6c                   	ins    BYTE PTR es:[edi],dx
  65:	65                   	gs
  66:	61                   	popa   
  67:	73 65                	jae    ce <_init-0x804833a>
  69:	29 00                	sub    DWORD PTR [eax],eax
